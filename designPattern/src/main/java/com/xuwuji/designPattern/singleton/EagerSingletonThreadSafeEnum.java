package com.xuwuji.designPattern.singleton;

/**
 * 饿汉式单例
 * 
 * 1、线程安全
 * 
 * 2、枚举实现
 *
 */
public enum EagerSingletonThreadSafeEnum {
	/**
	 * 1、外部无法通过构造器创建枚举类的实例，这也是枚举类通常用来保存常量的一个原因之一
	 * 
	 * 2、枚举类的实例会在类加载的时候线程安全的进行初始实例化
	 * 
	 * 3、枚举防止反序列化可以产生多个对象
	 * 
	 * 虚拟机会保证一个类的<clinit>()方法在多线程环境中被正确的加锁、同步，如果多个线程同时去初始化一个类，那么只会有一个线程去执行这个类的<clinit>()方法，其他线程都需要阻塞等待，直到活动线程执行<clinit>()方法完毕。
	 * 
	 * 需要注意的是，其他线程虽然会被阻塞，但如果执行<clinit>()方法的那条线程退出<clinit>()方法后，其他线程唤醒后不会再次进入<clinit>()方法。同一个类加载器下，一个类型只会初始化一次。
	 * 
	 * 综上所述，枚举保证了枚举实例的线程安全和单例性
	 */

	instance;
}
